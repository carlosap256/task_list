import random

from django.contrib.auth.models import User
from django.core.management.base import BaseCommand

from task_list.models import Task


class TestSet:

    def __init__(self):
        self.clear_all_objects()

    def clear_all_objects(self) -> None:
        User.objects.filter(is_staff=False, is_superuser=False).delete()
        Task.objects.all().delete()

    def generate_test_set(self):
        users = self.create_all_users()
        self.create_all_tasks(users)

    def create_all_users(self):
        users = list()
        users.append(self._create_user('alice', 'alice'))
        users.append(self._create_user('bob', 'bob'))
        users.append(self._create_user('eve', 'eve'))
        return users

    def _create_user(self, username: str, password: str):
        user = User.objects.create_user(username, password=password)
        user.save()
        return user

    def create_all_tasks(self, users) -> None:
        for i in range(15):
            owner = random.choice(users)
            name = 'Task autogenerated for user '+str(owner)
            is_done = random.choice([True, False])
            self._create_task(name, owner, is_done)

    def _create_task(self, name, owner, is_done)->None:
        if is_done:
            Task(name=name, owner=owner, is_done=True, marked_done_by=owner).save()
        else:
            Task(name=name, owner=owner, is_done=False).save()


class Command(BaseCommand):
    def handle(self, **options):
        testset = TestSet()
        testset.generate_test_set()


